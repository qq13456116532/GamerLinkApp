./AppShell.xaml:
【﻿<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="GamerLinkApp.AppShell"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:views="clr-namespace:GamerLinkApp.Views"
    Shell.FlyoutBehavior="Disabled"
    Title="GamerLinkApp"
    Shell.NavBarIsVisible="False">

    <!-- 定义底部标签栏 -->
    <TabBar>
        <!-- 第一个标签页: 商铺. 我们直接使用你已有的 ServiceListPage -->
        <ShellContent
            Title="商铺"
            ContentTemplate="{DataTemplate views:ServiceListPage}"
            Icon="tab_shop.png"
             />

        <!-- 第二个标签页: 专区. 我们将创建新的 ZonePage -->
        <ShellContent
            Title="专区"
            ContentTemplate="{DataTemplate views:ZonePage}"
            Icon="tab_zone.png"
            />

        <!-- 第三个标签页: 个人. 我们将创建新的 ProfilePage -->
        <ShellContent
            Title="个人"
            ContentTemplate="{DataTemplate views:ProfilePage}"
            Icon="tab_mine.png"
             />
    </TabBar>

</Shell>
】

./AppShell.xaml.cs:
【﻿using GamerLinkApp.Views;

namespace GamerLinkApp
{
    public partial class AppShell : Shell
    {
        public AppShell()
        {
            InitializeComponent();
            // 为服务详情页注册路由, 以便导航服务可以找到
            Routing.RegisterRoute(nameof(ServiceDetailPage), typeof(ServiceDetailPage));
        }
    }
}
】

./MainPage.xaml:
【﻿<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="GamerLinkApp.MainPage">

    <ScrollView>
        <VerticalStackLayout
            Padding="30,0"
            Spacing="25">
            <Image
                Source="dotnet_bot.png"
                HeightRequest="185"
                Aspect="AspectFit"
                SemanticProperties.Description="dot net bot in a hovercraft number nine" />

            <Label
                Text="Hello, World!"
                Style="{StaticResource Headline}"
                SemanticProperties.HeadingLevel="Level1" />

            <Label
                Text="Welcome to &#10;.NET Multi-platform App UI"
                Style="{StaticResource SubHeadline}"
                SemanticProperties.HeadingLevel="Level2"
                SemanticProperties.Description="Welcome to dot net Multi platform App U I" />

            <Button
                x:Name="CounterBtn"
                Text="Click me" 
                SemanticProperties.Hint="Counts the number of times you click"
                Clicked="OnCounterClicked"
                HorizontalOptions="Fill" />
        </VerticalStackLayout>
    </ScrollView>

</ContentPage>
】

./MainPage.xaml.cs:
【﻿namespace GamerLinkApp
{
    public partial class MainPage : ContentPage
    {
        int count = 0;

        public MainPage()
        {
            InitializeComponent();
        }

        private void OnCounterClicked(object? sender, EventArgs e)
        {
            count++;

            if (count == 1)
                CounterBtn.Text = $"Clicked {count} time";
            else
                CounterBtn.Text = $"Clicked {count} times";

            SemanticScreenReader.Announce(CounterBtn.Text);
        }
    }
}
】

./MauiProgram.cs:
【﻿using GamerLinkApp.Services;
using Microsoft.Extensions.Logging;
using GamerLinkApp.ViewModels;
using GamerLinkApp.Views;
namespace GamerLinkApp
{
    public static class MauiProgram
    {
        public static MauiApp CreateMauiApp()
        {
            var builder = MauiApp.CreateBuilder();
            builder
                .UseMauiApp<App>()
                .ConfigureFonts(fonts =>
                {
                    fonts.AddFont("OpenSans-Regular.ttf", "OpenSansRegular");
                    fonts.AddFont("OpenSans-Semibold.ttf", "OpenSansSemibold");
                });

#if DEBUG
    		builder.Logging.AddDebug();
#endif
            // 注册服务
            builder.Services.AddSingleton<IDataService, MockDataService>();

            // 注册视图和视图模型
            builder.Services.AddSingleton<ServiceListPage>();
            builder.Services.AddSingleton<ServiceListViewModel>();

            // ... 注册其他页面和视图模型
            builder.Services.AddSingleton<ZonePage>();
            builder.Services.AddSingleton<ZoneViewModel>();
            builder.Services.AddSingleton<ProfilePage>();
            builder.Services.AddSingleton<ProfileViewModel>();

            builder.Services.AddTransient<ServiceDetailPage>();
            builder.Services.AddTransient<ServiceDetailViewModel>();

            return builder.Build();
        }
    }
}
】

Models/Banner.cs:
【﻿namespace GamerLinkApp.Models
{
    public class Banner
    {
        public int Id { get; set; }
        public string ImageUrl { get; set; } // Banner图片地址
        public string TargetUrl { get; set; } // 点击Banner后跳转的地址 (例如某个服务的详情页)
    }
}
】

Models/Category.cs:
【﻿namespace GamerLinkApp.Models
{
    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; } // 分类名称，如 "MOBA", "FPS", "RPG"
        public string IconUrl { get; set; } // 分类的图标URL (可选)
    }
}】

Models/Favorite.cs:
【﻿namespace GamerLinkApp.Models
{
    public class Favorite
    {
        public int Id { get; set; }
        public int UserId { get; set; }     // 哪个用户收藏的
        public int ServiceId { get; set; }  // 收藏了哪个服务
    }
}】

Models/Order.cs:
【﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GamerLinkApp.Models
{
    public class Order
    {
        public int Id { get; set; }
        public int ServiceId { get; set; }
        public int BuyerId { get; set; }
        public DateTime OrderDate { get; set; }
        public string Status { get; set; } // 例如: "进行中", "已完成"

        // 订单流程管理
        public DateTime? PaymentDate { get; set; } // 支付时间
        public DateTime? CompletionDate { get; set; } // 订单完成时间
        public DateTime? RefundRequestDate { get; set; } // 退款申请时间
        public decimal TotalPrice { get; set; } // 订单总价

        // 评论系统关联
        public int? ReviewId { get; set; } // 关联的评论ID，可以为空
    }

    // 建议为订单状态定义一个枚举
    public enum OrderStatus
    {
        PendingPayment, // 待支付
        Ongoing,        // 进行中
        PendingReview,  // 待评论
        Completed,      // 已完成
        RefundRequested,// 退款中
        Cancelled       // 已取消
    }
}
】

Models/Review.cs:
【﻿using System;

namespace GamerLinkApp.Models
{
    public class Review
    {
        public int Id { get; set; }
        public int ServiceId { get; set; } // 关联哪个服务
        public int OrderId { get; set; }   // 关联哪个订单
        public int UserId { get; set; }    // 哪个用户发表的
        public int Rating { get; set; }    // 评分 (例如 1-5 星)
        public string Comment { get; set; } // 评论内容
        public DateTime ReviewDate { get; set; } // 评论时间
    }
}】

Models/Service.cs:
【﻿using System.Collections.Generic;

namespace GamerLinkApp.Models
{
    public class Service
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
        public string GameName { get; set; }
        public string ServiceType { get; set; } // 例如: "代练", "陪玩"
        public int SellerId { get; set; }

        public string ThumbnailUrl { get; set; } // 列表和推荐位缩略图
        public List<string> ImageUrls { get; set; } // 轮播图/详情图集合
        public string Category { get; set; } // 服务所属分类, 如 "MOBA", "FPS"
        public bool IsFeatured { get; set; } // 是否精选推荐
        public double AverageRating { get; set; } // 平均评分
        public int ReviewCount { get; set; } // 评价数量
        public int PurchaseCount { get; set; } // 累计购买人数
        public int CompletedCount { get; set; } // 已完成订单数

        public List<string> Tags { get; set; } // 服务标签, 如 "上分", "陪练"
    }
}
】

Models/User.cs:
【﻿using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GamerLinkApp.Models
{
    public class User
    {
        public int Id { get; set; }
        public string Username { get; set; }
        public string Email { get; set; }

        // 微信认证相关，暂时不用
        //public string WeChatOpenId { get; set; } // 用户的唯一标识
        //public string WeChatUnionId { get; set; } // 如果应用涉及多个公众号或小程序，会用到

        // 个人资料管理
        public string Nickname { get; set; } // 用户昵称
        public string AvatarUrl { get; set; } // 用户头像图片的URL

    }
}
】

Platforms/Android/AndroidManifest.xml:
【﻿<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">
	<application android:allowBackup="true" android:icon="@mipmap/appicon" android:roundIcon="@mipmap/appicon_round" android:supportsRtl="true" android:theme="@style/Maui.MainTheme"></application>
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	<uses-permission android:name="android.permission.INTERNET" />
</manifest>】

Platforms/Android/MainActivity.cs:
【﻿using Android.App;
using Android.Content.PM;
using Android.OS;

namespace GamerLinkApp
{
    [Activity(Theme = "@style/Maui.SplashTheme", MainLauncher = true, LaunchMode = LaunchMode.SingleTop, ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation | ConfigChanges.UiMode | ConfigChanges.ScreenLayout | ConfigChanges.SmallestScreenSize | ConfigChanges.Density)]
    public class MainActivity : MauiAppCompatActivity
    {
    }
}
】

Platforms/Android/MainApplication.cs:
【﻿using Android.App;
using Android.Runtime;

namespace GamerLinkApp
{
    [Application]
    public class MainApplication : MauiApplication
    {
        public MainApplication(IntPtr handle, JniHandleOwnership ownership)
            : base(handle, ownership)
        {
        }

        protected override MauiApp CreateMauiApp() => MauiProgram.CreateMauiApp();
    }
}
】

Platforms/Android/Resources/values/colors.xml:
【<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="colorPrimary">#512BD4</color>
    <color name="colorPrimaryDark">#2B0B98</color>
    <color name="colorAccent">#2B0B98</color>
</resources>】

Platforms/Android/Resources/values/styles.xml:
【<?xml version="1.0" encoding="utf-8" ?>
<resources>
	<!-- 定义基础主题，确保其父主题是 MaterialComponents 的子主题 -->
	<style name="MainTheme.Base" parent="Theme.MaterialComponents.DayNight.NoActionBar">
		<!-- 应用的主要颜色 -->
		<item name="colorPrimary">@color/colorPrimary</item>
		<item name="colorPrimaryDark">@color/colorPrimaryDark</item>
		<item name="colorAccent">@color/colorAccent</item>

		<!-- 确保窗口没有标题栏，因为 MAUI 会自己处理 -->
		<item name="android:windowNoTitle">true</item>
		<!-- 对于某些版本，可能还需要这个来移除窗口边框 -->
		<item name="windowActionBar">false</item>

		<!-- 如果需要，还可以添加其他窗口相关的设置 -->
		<item name="android:windowBackground">@android:color/white</item>
	</style>

	<!-- 定义应用实际使用的主题，它继承自我们定义的基础主题 -->
	<style name="Maui.MainTheme" parent="MainTheme.Base" />

</resources>】

Platforms/iOS/Program.cs:
【﻿using ObjCRuntime;
using UIKit;

namespace GamerLinkApp
{
    public class Program
    {
        // This is the main entry point of the application.
        static void Main(string[] args)
        {
            // if you want to use a different Application Delegate class from "AppDelegate"
            // you can specify it here.
            UIApplication.Main(args, null, typeof(AppDelegate));
        }
    }
}
】

Platforms/MacCatalyst/Program.cs:
【﻿using ObjCRuntime;
using UIKit;

namespace GamerLinkApp
{
    public class Program
    {
        // This is the main entry point of the application.
        static void Main(string[] args)
        {
            // if you want to use a different Application Delegate class from "AppDelegate"
            // you can specify it here.
            UIApplication.Main(args, null, typeof(AppDelegate));
        }
    }
}
】

Services/IDataService.cs:
【﻿using GamerLinkApp.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GamerLinkApp.Services
{
    public interface IDataService
    {
        Task<List<Service>> GetServicesAsync();
        // ... 其他数据操作方法
    }
}
】

Services/MockDataService.cs:
【﻿using GamerLinkApp.Models;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace GamerLinkApp.Services
{
    public class MockDataService : IDataService
    {
        public async Task<List<Service>> GetServicesAsync()
        {
            await Task.Delay(500); // 模拟网络延迟

            return new List<Service>
            {
                new Service
                {
                    Id = 1,
                    Title = "王者荣耀-荣耀王者陪练",
                    Description = "资深荣耀王者，全程语音指导，帮你稳步冲分。",
                    GameName = "王者荣耀",
                    Price = 50,
                    ServiceType = "陪玩",
                    Category = "MOBA",
                    ThumbnailUrl = "https://images.unsplash.com/photo-1521572267360-ee0c2909d518?auto=format&fit=crop&w=640&q=80",
                    ImageUrls = new List<string>
                    {
                        "https://images.unsplash.com/photo-1521572267360-ee0c2909d518?auto=format&fit=crop&w=1080&q=80",
                        "https://images.unsplash.com/photo-1489515217757-5fd1be406fef?auto=format&fit=crop&w=1080&q=80"
                    },
                    IsFeatured = true,
                    AverageRating = 4.9,
                    ReviewCount = 1280,
                    PurchaseCount = 1547,
                    CompletedCount = 120,
                    Tags = new List<string> { "大神陪练", "语音指导", "快速上分" }
                },
                new Service
                {
                    Id = 2,
                    Title = "英雄联盟-钻石到大师",
                    Description = "职业选手小号，提供双排/代练服务，安全稳定。",
                    GameName = "英雄联盟",
                    Price = 300,
                    ServiceType = "代练",
                    Category = "MOBA",
                    ThumbnailUrl = "https://images.unsplash.com/photo-1538485399081-7191377e8248?auto=format&fit=crop&w=640&q=80",
                    ImageUrls = new List<string>
                    {
                        "https://images.unsplash.com/photo-1538485399081-7191377e8248?auto=format&fit=crop&w=1080&q=80",
                        "https://images.unsplash.com/photo-1505740420928-5e560c06d30e?auto=format&fit=crop&w=1080&q=80"
                    },
                    IsFeatured = true,
                    AverageRating = 4.8,
                    ReviewCount = 980,
                    PurchaseCount = 2300,
                    CompletedCount = 45,
                    Tags = new List<string> { "极速上分", "全天在线", "职业大神" }
                },
                new Service
                {
                    Id = 3,
                    Title = "绝地求生-战术教官",
                    Description = "提供战术复盘、枪法训练、团队配合提升计划。",
                    GameName = "绝地求生",
                    Price = 120,
                    ServiceType = "教学",
                    Category = "射击",
                    ThumbnailUrl = "https://images.unsplash.com/photo-1605902711622-cfb43c44367f?auto=format&fit=crop&w=640&q=80",
                    ImageUrls = new List<string>
                    {
                        "https://images.unsplash.com/photo-1605902711622-cfb43c44367f?auto=format&fit=crop&w=1080&q=80",
                        "https://images.unsplash.com/photo-1529257414771-1960ab1ddb12?auto=format&fit=crop&w=1080&q=80"
                    },
                    IsFeatured = false,
                    AverageRating = 4.7,
                    ReviewCount = 560,
                    PurchaseCount = 860,
                    CompletedCount = 72,
                    Tags = new List<string> { "战术复盘", "枪法提升", "团战配合" }
                }
            };
        }
    }
}
】

ViewModels/BaseViewModel.cs:
【using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace GamerLinkApp.ViewModels
{
    public class BaseViewModel : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}】

ViewModels/ProfileViewModel.cs:
【using GamerLinkApp.ViewModels;

namespace GamerLinkApp.ViewModels
{
    public class ProfileViewModel : BaseViewModel
    {
        public ProfileViewModel()
        {
            // ÔÚÕâÀï¿ÉÒÔ³õÊ¼»¯¸öÈËÒ³ÃæµÄÊý¾ÝºÍÃüÁî
        }
    }
}】

ViewModels/ServiceDetailViewModel.cs:
【﻿using GamerLinkApp.Models;
using GamerLinkApp.Services;
using System;
using System.Linq;
using System.Threading.Tasks;

namespace GamerLinkApp.ViewModels
{
    public class ServiceDetailViewModel : BaseViewModel
    {
        private readonly IDataService _dataService;

        private Service? _selectedService;
        public Service? SelectedService
        {
            get => _selectedService;
            set
            {
                if (_selectedService == value)
                    return;

                _selectedService = value;
                OnPropertyChanged();
            }
        }

        private int _serviceId;
        public int ServiceId
        {
            get => _serviceId;
            set
            {
                if (_serviceId == value)
                    return;

                _serviceId = value;
                OnPropertyChanged();
                _ = LoadServiceAsync(value);
            }
        }

        public ServiceDetailViewModel(IDataService dataService)
        {
            _dataService = dataService;
        }

        private async Task LoadServiceAsync(int id)
        {
            if (id <= 0)
            {
                SelectedService = null;
                return;
            }

            try
            {
                var services = await _dataService.GetServicesAsync();
                SelectedService = services.FirstOrDefault(s => s.Id == id);
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"Failed to load service detail: {ex.Message}");
            }
        }
    }
}
】

ViewModels/ServiceListViewModel.cs:
【﻿using GamerLinkApp.Models;
using System.Collections.ObjectModel;
using System.Threading.Tasks;
using GamerLinkApp.Services;

namespace GamerLinkApp.ViewModels
{
    public class ServiceListViewModel : BaseViewModel
    {
        private readonly IDataService _dataService;

        public ObservableCollection<Service> Services { get; } = new();

        public ServiceListViewModel(IDataService dataService)
        {
            _dataService = dataService;
            _ = LoadServicesAsync(); // 异步加载，不阻塞UI
        }

        private async Task LoadServicesAsync()
        {
            try
            {
                var services = await _dataService.GetServicesAsync();
                Services.Clear();
                foreach (var service in services)
                {
                    Services.Add(service);
                }
            }
            catch (Exception ex)
            {
                // TODO: 可以加日志或者 UI 提示
                System.Diagnostics.Debug.WriteLine($"加载服务失败: {ex.Message}");
            }
        }
    }
}
】

ViewModels/ZoneViewModel.cs:
【using GamerLinkApp.ViewModels;

namespace GamerLinkApp.ViewModels
{
    public class ZoneViewModel : BaseViewModel
    {
        public ZoneViewModel()
        {
            // 在这里可以初始化专区页面的数据和命令
        }
    }
}】

Views/ProfilePage.xaml:
【<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="GamerLinkApp.Views.ProfilePage"
             Title="个人"
             BackgroundColor="#F4F5F7">
    <Grid RowDefinitions="Auto,*">
        

        <ScrollView Grid.Row="1"
                    Padding="0,12,0,24">
            <VerticalStackLayout Spacing="16"
                                  Padding="20,0,20,0">
                <Border Padding="24,32"
                        StrokeThickness="0"
                        BackgroundColor="Transparent">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="24" />
                    </Border.StrokeShape>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#E9F0FF" Offset="0" />
                            <GradientStop Color="#FFE9F3" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <VerticalStackLayout Spacing="16"
                                          HorizontalOptions="Center"
                                          VerticalOptions="Center">
                        <Border WidthRequest="96"
                                HeightRequest="96"
                                StrokeThickness="0"
                                BackgroundColor="#1A1A1A"
                                HorizontalOptions="Center"
                                VerticalOptions="Center">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="48" />
                            </Border.StrokeShape>
                            <VerticalStackLayout VerticalOptions="Center"
                                                  HorizontalOptions="Center"
                                                  Spacing="0">
                                <Label Text="IHARTY"
                                       FontSize="14"
                                       TextColor="White"
                                       HorizontalOptions="Center"
                                       VerticalOptions="Center" />
                            </VerticalStackLayout>
                        </Border>
                        <Label Text="irving"
                               FontSize="18"
                               FontAttributes="Bold"
                               TextColor="#1A1A1A"
                               HorizontalOptions="Center" />
                        <Label Text="ID: 123456"
                               FontSize="14"
                               TextColor="#666666"
                               HorizontalOptions="Center" />
                    </VerticalStackLayout>
                </Border>

                <Border BackgroundColor="White"
                        Padding="20"
                        StrokeThickness="0">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="20" />
                    </Border.StrokeShape>
                    <Border.Shadow>
                        <Shadow Brush="#14000000"
                                Offset="0,6"
                                Radius="12" />
                    </Border.Shadow>
                    <VerticalStackLayout Spacing="20">
                        <Grid ColumnDefinitions="*,Auto"
                              VerticalOptions="Center">
                            <Label Text="订单"
                                   FontSize="16"
                                   FontAttributes="Bold"
                                   TextColor="#1A1A1A" />
                            <Label Text="全部"
                                   Grid.Column="1"
                                   FontSize="14"
                                   TextColor="#00AEEF" />
                        </Grid>

                        <Grid ColumnDefinitions="*,*,*,*"
                              ColumnSpacing="18">
                            <VerticalStackLayout Spacing="8"
                                                  HorizontalOptions="Center"
                                                  VerticalOptions="Center">
                                <Border WidthRequest="48"
                                        HeightRequest="48"
                                        StrokeThickness="0"
                                        BackgroundColor="#F5F7FA">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="24" />
                                    </Border.StrokeShape>
                                    <Label Text="¥"
                                           FontSize="20"
                                           TextColor="#1A1A1A"
                                           HorizontalOptions="Center"
                                           VerticalOptions="Center" />
                                </Border>
                                <Label Text="待付款"
                                       FontSize="13"
                                       TextColor="#444444"
                                       HorizontalTextAlignment="Center" />
                            </VerticalStackLayout>

                            <VerticalStackLayout Grid.Column="1"
                                                  Spacing="8"
                                                  HorizontalOptions="Center"
                                                  VerticalOptions="Center">
                                <Border WidthRequest="48"
                                        HeightRequest="48"
                                        StrokeThickness="0"
                                        BackgroundColor="#F5F7FA">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="24" />
                                    </Border.StrokeShape>
                                    <Label Text="⏳"
                                           FontSize="20"
                                           TextColor="#1A1A1A"
                                           HorizontalOptions="Center"
                                           VerticalOptions="Center" />
                                </Border>
                                <Label Text="进行中"
                                       FontSize="13"
                                       TextColor="#444444"
                                       HorizontalTextAlignment="Center" />
                            </VerticalStackLayout>

                            <VerticalStackLayout Grid.Column="2"
                                                  Spacing="8"
                                                  HorizontalOptions="Center"
                                                  VerticalOptions="Center">
                                <Border WidthRequest="48"
                                        HeightRequest="48"
                                        StrokeThickness="0"
                                        BackgroundColor="#F5F7FA">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="24" />
                                    </Border.StrokeShape>
                                    <Label Text="★"
                                           FontSize="20"
                                           TextColor="#1A1A1A"
                                           HorizontalOptions="Center"
                                           VerticalOptions="Center" />
                                </Border>
                                <Label Text="待评价"
                                       FontSize="13"
                                       TextColor="#444444"
                                       HorizontalTextAlignment="Center" />
                            </VerticalStackLayout>

                            <VerticalStackLayout Grid.Column="3"
                                                  Spacing="8"
                                                  HorizontalOptions="Center"
                                                  VerticalOptions="Center">
                                <Border WidthRequest="48"
                                        HeightRequest="48"
                                        StrokeThickness="0"
                                        BackgroundColor="#F5F7FA">
                                    <Border.StrokeShape>
                                        <RoundRectangle CornerRadius="24" />
                                    </Border.StrokeShape>
                                    <Label Text="🗂"
                                           FontSize="20"
                                           TextColor="#1A1A1A"
                                           HorizontalOptions="Center"
                                           VerticalOptions="Center" />
                                </Border>
                                <Label Text="全部订单"
                                       FontSize="13"
                                       TextColor="#444444"
                                       HorizontalTextAlignment="Center" />
                            </VerticalStackLayout>
                        </Grid>
                    </VerticalStackLayout>
                </Border>

                <VerticalStackLayout Spacing="12">
                    <Border BackgroundColor="White"
                            Padding="16"
                            StrokeThickness="0">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="16" />
                        </Border.StrokeShape>
                        <Grid ColumnDefinitions="*,Auto"
                              VerticalOptions="Center">
                            <Label Text="关于我们"
                                   FontSize="15"
                                   TextColor="#1A1A1A" />
                            <Label Text=">"
                                   Grid.Column="1"
                                   FontSize="16"
                                   TextColor="#C0C0C0" />
                        </Grid>
                    </Border>

                    <Border BackgroundColor="White"
                            Padding="16"
                            StrokeThickness="0">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="16" />
                        </Border.StrokeShape>
                        <Grid ColumnDefinitions="*,Auto"
                              VerticalOptions="Center">
                            <Label Text="设置"
                                   FontSize="15"
                                   TextColor="#1A1A1A" />
                            <Label Text=">"
                                   Grid.Column="1"
                                   FontSize="16"
                                   TextColor="#C0C0C0" />
                        </Grid>
                    </Border>
                </VerticalStackLayout>
            </VerticalStackLayout>
        </ScrollView>
    </Grid>
</ContentPage>
】

Views/ProfilePage.xaml.cs:
【using GamerLinkApp.ViewModels;

namespace GamerLinkApp.Views;

public partial class ProfilePage : ContentPage
{
    public ProfilePage(ProfileViewModel vm)
    {
        InitializeComponent();
        BindingContext = vm;
    }
    public ProfilePage()
    {
        InitializeComponent();
    }
}】

Views/ServiceDetailPage.xaml:
【<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="GamerLinkApp.Views.ServiceDetailPage"
             Title="服务详情"
             BackgroundColor="#F4F5F7">
    <Grid RowDefinitions="Auto,*,Auto">
        <Grid Grid.Row="0"
              BackgroundColor="White"
              Padding="20,12">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Label Text="服务详情"
                   Grid.ColumnSpan="2"
                   FontSize="20"
                   FontAttributes="Bold"
                   HorizontalOptions="Center"
                   HorizontalTextAlignment="Center"
                   VerticalOptions="Center" />

            <HorizontalStackLayout Grid.Column="1"
                                    Spacing="12"
                                    VerticalOptions="Center">
                <Border StrokeThickness="1"
                        Stroke="#E0E0E0"
                        BackgroundColor="Transparent"
                        Padding="10,4"
                        HeightRequest="32">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="16" />
                    </Border.StrokeShape>
                    <Label Text="..."
                           FontSize="16"
                           HorizontalOptions="Center"
                           VerticalOptions="Center" />
                </Border>
                <Border StrokeThickness="1"
                        Stroke="#E0E0E0"
                        BackgroundColor="Transparent"
                        Padding="10,4"
                        HeightRequest="32">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="16" />
                    </Border.StrokeShape>
                    <Label Text="O"
                           FontSize="16"
                           HorizontalOptions="Center"
                           VerticalOptions="Center" />
                </Border>
            </HorizontalStackLayout>
        </Grid>

        <ScrollView Grid.Row="1"
                    Padding="0,12,0,0">
            <VerticalStackLayout Spacing="18"
                                  Padding="20,0,20,120">
                <Border HeightRequest="220"
                        StrokeThickness="0"
                        BackgroundColor="#D9D9D9"
                        >
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="26" />
                    </Border.StrokeShape>
                    <Grid>
                        <Image Source="{Binding SelectedService.ThumbnailUrl}"
                               Aspect="AspectFill" />
                        <Grid>
                            <Grid.Background>
                                <LinearGradientBrush StartPoint="0,0.4" EndPoint="0,1">
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#A6000000" Offset="1" />
                                </LinearGradientBrush>
                            </Grid.Background>
                        </Grid>
                        <VerticalStackLayout Spacing="6"
                                              Padding="20,20,20,24"
                                              VerticalOptions="End">
                            <Label Text="{Binding SelectedService.GameName}"
                                   FontSize="14"
                                   TextColor="#F2F5FF"
                                   Opacity="0.9" />
                            <Label Text="{Binding SelectedService.Title}"
                                   FontSize="22"
                                   FontAttributes="Bold"
                                   TextColor="White"
                                   LineBreakMode="TailTruncation" />
                            <Label Text="{Binding SelectedService.ServiceType, StringFormat='服务类型: {0}'}"
                                   FontSize="13"
                                   TextColor="#F2F5FF"
                                   Opacity="0.9" />
                        </VerticalStackLayout>
                    </Grid>
                </Border>

                <Border BackgroundColor="White"
                        Padding="20"
                        StrokeThickness="0">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="24" />
                    </Border.StrokeShape>
                    <VerticalStackLayout Spacing="16">
                        <HorizontalStackLayout Spacing="12"
                                                VerticalOptions="Center">
                            <Label Text="服务亮点"
                                   FontSize="16"
                                   FontAttributes="Bold"
                                   TextColor="#1A1A1A" />
                            <Border BackgroundColor="#EEF0FF"
                                    Padding="10,4"
                                    StrokeThickness="0">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="12" />
                                </Border.StrokeShape>
                                <Border.Triggers>
                                    <DataTrigger TargetType="Border"
                                                 Binding="{Binding SelectedService.Category}"
                                                 Value="">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger TargetType="Border"
                                                 Binding="{Binding SelectedService.Category}"
                                                 Value="{x:Null}">
                                        <Setter Property="IsVisible" Value="False" />
                                    </DataTrigger>
                                </Border.Triggers>
                                <Label Text="{Binding SelectedService.Category}"
                                       FontSize="13"
                                       TextColor="#5B61FF"
                                       FontAttributes="Bold" />
                            </Border>
                        </HorizontalStackLayout>

                        <FlexLayout BindableLayout.ItemsSource="{Binding SelectedService.Tags}"
                                   Wrap="Wrap"
                                   AlignItems="Center"
                                   AlignContent="Start"
                                   JustifyContent="Start"
                                   Margin="0">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Border BackgroundColor="#F5F6FB"
                                            StrokeThickness="0"
                                            Padding="12,6"
                                            Margin="0,0,10,10">
                                        <Border.StrokeShape>
                                            <RoundRectangle CornerRadius="14" />
                                        </Border.StrokeShape>
                                        <Label Text="{Binding .}"
                                               FontSize="13"
                                               TextColor="#5B61FF" />
                                    </Border>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>

                        <Grid ColumnDefinitions="*,*"
                              ColumnSpacing="18">
                            <Border BackgroundColor="#F9FAFC"
                                    Padding="16"
                                    StrokeThickness="0">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="18" />
                                </Border.StrokeShape>
                                <VerticalStackLayout Spacing="6">
                                    <Label Text="评分"
                                           FontSize="13"
                                           TextColor="#727C8C" />
                                    <Label Text="{Binding SelectedService.AverageRating, StringFormat='{0:F1}'}"
                                           FontSize="18"
                                           FontAttributes="Bold"
                                           TextColor="#1F1F1F" />
                                    <Label Text="{Binding SelectedService.ReviewCount, StringFormat='{0}条评价'}"
                                           FontSize="12"
                                           TextColor="#9AA0AE" />
                                </VerticalStackLayout>
                            </Border>

                            <Border Grid.Column="1"
                                    BackgroundColor="#F9FAFC"
                                    Padding="16"
                                    StrokeThickness="0">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="18" />
                                </Border.StrokeShape>
                                <VerticalStackLayout Spacing="6">
                                    <Label Text="成交"
                                           FontSize="13"
                                           TextColor="#727C8C" />
                                    <Label Text="{Binding SelectedService.PurchaseCount, StringFormat='{0}人购买'}"
                                           FontSize="18"
                                           FontAttributes="Bold"
                                           TextColor="#1F1F1F" />
                                    <Label Text="{Binding SelectedService.CompletedCount, StringFormat='已完成 {0} 单'}"
                                           FontSize="12"
                                           TextColor="#9AA0AE" />
                                </VerticalStackLayout>
                            </Border>
                        </Grid>
                    </VerticalStackLayout>
                </Border>

                <Border BackgroundColor="White"
                        Padding="20"
                        StrokeThickness="0">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="24" />
                    </Border.StrokeShape>
                    <VerticalStackLayout Spacing="12">
                        <Label Text="服务介绍"
                               FontSize="16"
                               FontAttributes="Bold"
                               TextColor="#1A1A1A" />
                        <Label Text="{Binding SelectedService.Description}"
                               FontSize="14"
                               TextColor="#434A59"
                               LineHeight="1.4" />
                    </VerticalStackLayout>
                </Border>
            </VerticalStackLayout>
        </ScrollView>

        <Grid Grid.Row="2"
              BackgroundColor="White"
              Padding="20,12,20,24"
              ColumnDefinitions="*,Auto">
            <VerticalStackLayout Spacing="4"
                                  VerticalOptions="Center">
                <Label Text="当前价格"
                       FontSize="12"
                       TextColor="#7B8596" />
                <Label Text="{Binding SelectedService.Price, StringFormat='¥{0:F0}'}"
                       FontSize="22"
                       FontAttributes="Bold"
                       TextColor="#FF4D4F" />
            </VerticalStackLayout>
            <Button Grid.Column="1"
                    Text="立即下单"
                    HeightRequest="48"
                    WidthRequest="160"
                    CornerRadius="24"
                    BackgroundColor="#5B61FF"
                    TextColor="White"
                    FontAttributes="Bold" />
        </Grid>
    </Grid>
</ContentPage>
】

Views/ServiceDetailPage.xaml.cs:
【﻿using System;
using GamerLinkApp.Services;
using GamerLinkApp.ViewModels;
using Microsoft.Extensions.DependencyInjection;

namespace GamerLinkApp.Views;

[QueryProperty(nameof(ServiceId), "id")]
public partial class ServiceDetailPage : ContentPage
{
    private readonly ServiceDetailViewModel _viewModel;

    public ServiceDetailPage() : this(ResolveViewModel())
    {
    }

    public ServiceDetailPage(ServiceDetailViewModel vm)
    {
        InitializeComponent();
        _viewModel = vm;
        BindingContext = _viewModel;
    }

    private static ServiceDetailViewModel ResolveViewModel()
    {
        var services = Application.Current?.Handler?.MauiContext?.Services;
        if (services is not null)
        {
            return services.GetRequiredService<ServiceDetailViewModel>();
        }

        // Fall back to mock data when the MAUI service provider isn't available (e.g. design-time).
        return new ServiceDetailViewModel(new MockDataService());
    }

    public string? ServiceId
    {
        set
        {
            if (int.TryParse(value, out var id))
            {
                _viewModel.ServiceId = id;
            }
        }
    }
}
】

Views/ServiceListPage.xaml:
【﻿<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models="clr-namespace:GamerLinkApp.Models"
             x:Class="GamerLinkApp.Views.ServiceListPage"
             Title="服务列表"
             BackgroundColor="#F5F6F9">
    <ContentPage.Resources>
        <Thickness x:Key="PagePadding">20,16,20,0</Thickness>
    </ContentPage.Resources>

    <CollectionView ItemsSource="{Binding Services}"
                    SelectionMode="Single"
                    SelectionChanged="OnServiceSelected"
                    BackgroundColor="Transparent"
                    ItemSizingStrategy="MeasureAllItems">
        <CollectionView.ItemsLayout>
            <LinearItemsLayout Orientation="Vertical"
                               ItemSpacing="0" />
        </CollectionView.ItemsLayout>

        <CollectionView.Header>
            <VerticalStackLayout Spacing="24"
                                  Padding="{StaticResource PagePadding}">
                <Frame Padding="14,12"
                       CornerRadius="24"
                       BackgroundColor="White"
                       HasShadow="False"
                       BorderColor="#EEEEEE">
                    <HorizontalStackLayout Spacing="12"
                                            HorizontalOptions="FillAndExpand"
                                            VerticalOptions="Center">
                        <Image HeightRequest="20"
                               WidthRequest="20"
                               VerticalOptions="Center"
                               Source="https://img.icons8.com/ios-glyphs/30/9AA0B1/search--v1.png" />
                        <Entry Placeholder="搜索大神或服务"
                               PlaceholderColor="#9AA0B1"
                               TextColor="#2A2F3C"
                               FontSize="14"
                               VerticalOptions="Center"
                               HorizontalOptions="FillAndExpand"
                               BackgroundColor="Transparent"
                               Margin="0"
                               IsTextPredictionEnabled="False"
                               ReturnType="Search" />
                    </HorizontalStackLayout>
                </Frame>

                <VerticalStackLayout Spacing="8">
                    <CarouselView HeightRequest="165"
                                  Loop="True"
                                  IsBounceEnabled="False"
                                  IndicatorView="{x:Reference BannerIndicators}">
                        <CarouselView.ItemsSource>
                            <x:Array Type="{x:Type x:String}">
                                <x:String>banner1.png</x:String>
                                <x:String>banner2.png</x:String>
                                <x:String>banner3.png</x:String>
                            </x:Array>
                        </CarouselView.ItemsSource>
                        <CarouselView.ItemTemplate>
                            <DataTemplate>
                                <Frame Padding="0"
                                       HasShadow="False"
                                       CornerRadius="18">
                                    <Image Source="{Binding .}"
                                           Aspect="AspectFill" />
                                </Frame>
                            </DataTemplate>
                        </CarouselView.ItemTemplate>
                    </CarouselView>
                    <IndicatorView x:Name="BannerIndicators"
                                   HorizontalOptions="Center"
                                   IndicatorColor="#D9D9D9"
                                   SelectedIndicatorColor="#5B61FF" />
                </VerticalStackLayout>

                <Grid ColumnDefinitions="*,*,*"
                      ColumnSpacing="14">
                    <Border BackgroundColor="White"
                            StrokeShape="RoundRectangle 18"
                            Padding="14,12"
                            HeightRequest="90">
                        <VerticalStackLayout Spacing="10"
                                             HorizontalOptions="Center"
                                             VerticalOptions="Center">
                            <Image HeightRequest="28"
                                   WidthRequest="28"
                                   Source="https://img.icons8.com/fluency-systems-filled/48/5B61FF/sword.png" />
                            <Label Text="英雄联盟"
                                   FontSize="13"
                                   TextColor="#2A2F3C"
                                   HorizontalTextAlignment="Center" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Grid.Column="1"
                            BackgroundColor="White"
                            StrokeShape="RoundRectangle 18"
                            Padding="14,12"
                            HeightRequest="90">
                        <VerticalStackLayout Spacing="10"
                                             HorizontalOptions="Center"
                                             VerticalOptions="Center">
                            <Image HeightRequest="28"
                                   WidthRequest="28"
                                   Source="https://img.icons8.com/fluency-systems-filled/48/5B61FF/crown.png" />
                            <Label Text="王者荣耀"
                                   FontSize="13"
                                   TextColor="#2A2F3C"
                                   HorizontalTextAlignment="Center" />
                        </VerticalStackLayout>
                    </Border>

                    <Border Grid.Column="2"
                            BackgroundColor="White"
                            StrokeShape="RoundRectangle 18"
                            Padding="14,12"
                            HeightRequest="90">
                        <VerticalStackLayout Spacing="10"
                                             HorizontalOptions="Center"
                                             VerticalOptions="Center">
                            <Image HeightRequest="28"
                                   WidthRequest="28"
                                   Source="https://img.icons8.com/fluency-systems-filled/48/5B61FF/medal.png" />
                            <Label Text="金牌教学"
                                   FontSize="13"
                                   TextColor="#2A2F3C"
                                   HorizontalTextAlignment="Center" />
                        </VerticalStackLayout>
                    </Border>
                </Grid>

                <Label Text="精选推荐"
                       FontSize="18"
                       FontAttributes="Bold"
                       TextColor="#2A2F3C" />
            </VerticalStackLayout>
        </CollectionView.Header>

        <CollectionView.ItemTemplate>
            <DataTemplate x:DataType="models:Service">
                <Frame Margin="20,0,20,16"
                       Padding="12"
                       BackgroundColor="White"
                       CornerRadius="18"
                       HasShadow="False"
                       BorderColor="#EEEEEE">
                    <Grid ColumnDefinitions="Auto,*"
                          ColumnSpacing="14">
                        <Border  Grid.Column="0"
                                WidthRequest="110"
                                HeightRequest="88"
                                StrokeShape="RoundRectangle 16"
                                VerticalOptions="Center"
                                >
                            <Image Source="{Binding ThumbnailUrl}"
                                   Aspect="AspectFill" />
                        </Border>

                        <VerticalStackLayout  Grid.Column="1" Spacing="6"
                                             VerticalOptions="Center">
                            <Label Text="{Binding Title}"
                                   FontSize="16"
                                   FontAttributes="Bold"
                                   TextColor="#2A2F3C"
                                   LineBreakMode="TailTruncation" />
                            <Label Text="{Binding GameName}"
                                   FontSize="13"
                                   TextColor="#777D8C"
                                   LineBreakMode="TailTruncation" />
                            <HorizontalStackLayout Spacing="10">
                                <Label Text="{Binding PurchaseCount, StringFormat='{0}人购买'}"
                                       FontSize="12"
                                       TextColor="#9AA0B1" />
                                <Label Text="{Binding CompletedCount, StringFormat='已售{0}'}"
                                       FontSize="12"
                                       TextColor="#9AA0B1" />
                            </HorizontalStackLayout>
                            <Label Text="{Binding Price, StringFormat='¥{0:F0}'}"
                                   FontSize="16"
                                   FontAttributes="Bold"
                                   TextColor="#FF4D4F" />
                        </VerticalStackLayout>
                    </Grid>
                </Frame>
            </DataTemplate>
        </CollectionView.ItemTemplate>
    </CollectionView>
</ContentPage>

】

Views/ServiceListPage.xaml.cs:
【using GamerLinkApp.Models;
using GamerLinkApp.ViewModels;
using System.Collections.Generic;

namespace GamerLinkApp.Views;

public partial class ServiceListPage : ContentPage
{
    public ServiceListPage(ServiceListViewModel vm)
    {
        InitializeComponent();
        BindingContext = vm; // ͨ������ע��� ViewModel
    }

    // �޲����Ĺ��캯�����Ա������Ա�XAMLԤ������������
    public ServiceListPage()
    {
        InitializeComponent();
    }

    // ����: ����������Ŀѡ���¼�
    private async void OnServiceSelected(object sender, SelectionChangedEventArgs e)
    {
        if (e.CurrentSelection.FirstOrDefault() is not Service selectedService)
            return;

        await Shell.Current.GoToAsync($"{nameof(ServiceDetailPage)}?id={selectedService.Id}");

        ((CollectionView)sender).SelectedItem = null;
    }

}
】

Views/ZonePage.xaml:
【<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="GamerLinkApp.Views.ZonePage"
             Title="专区"
             BackgroundColor="#F4F5F7">
    <Grid RowDefinitions="Auto,*">
        

        <Grid Grid.Row="1"
              ColumnDefinitions="130,*">
            <VerticalStackLayout Grid.Column="0"
                                 BackgroundColor="#EFEFF4"
                                 Padding="0"
                                 Spacing="0">
                <Border BackgroundColor="White"
                        Margin="0,12,0,0"
                        Padding="0,6">
                    <Grid ColumnDefinitions="4,*"
                          VerticalOptions="Center"
                          HeightRequest="48">
                        <BoxView Grid.Column="0"
                                 WidthRequest="4"
                                 BackgroundColor="#00AEEF" />
                        <Label Grid.Column="1"
                               Text="英雄联盟"
                               FontAttributes="Bold"
                               FontSize="16"
                               TextColor="#00AEEF"
                               VerticalOptions="Center"
                               Padding="16,0" />
                    </Grid>
                </Border>

                <Border BackgroundColor="Transparent"
                        Padding="16,14"
                        HeightRequest="48">
                    <Label Text="王者荣耀"
                           FontSize="15"
                           TextColor="#4D4D4D"
                           VerticalOptions="Center" />
                </Border>

                <Border BackgroundColor="Transparent"
                        Padding="16,14"
                        HeightRequest="48">
                    <Label Text="金铲铲之战"
                           FontSize="15"
                           TextColor="#4D4D4D"
                           VerticalOptions="Center" />
                </Border>
            </VerticalStackLayout>

            <ScrollView Grid.Column="1"
                        BackgroundColor="White"
                        Padding="0,12,0,0">
                <VerticalStackLayout Padding="20,0,20,24"
                                      Spacing="16">
                    <Label Text="英雄联盟"
                           FontSize="18"
                           FontAttributes="Bold"
                           TextColor="#1A1A1A" />

                    <Border BackgroundColor="White"
                            StrokeThickness="1"
                            Stroke="#E5E5E5"
                            Padding="16">
                        <Border.StrokeShape>
                            <RoundRectangle CornerRadius="16" />
                        </Border.StrokeShape>
                        <Border.Shadow>
                            <Shadow Brush="#1A000000"
                                    Offset="0,4"
                                    Radius="8" />
                        </Border.Shadow>
                        <Grid ColumnDefinitions="Auto,*"
                              ColumnSpacing="16">
                            <Border WidthRequest="80"
                                    HeightRequest="80"
                                    StrokeThickness="0"
                                    BackgroundColor="#F2F2F2">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="12" />
                                </Border.StrokeShape>
                                <Image Source="dotnet_bot.png"
                                       Aspect="AspectFill" />
                            </Border>

                            <VerticalStackLayout Grid.Column="1"
                                                  Spacing="6"
                                                  VerticalOptions="Center">
                                <Label Text="英雄联盟-钻石到大师"
                                       FontAttributes="Bold"
                                       FontSize="16"
                                       TextColor="#1A1A1A" />
                                <Label Text="已售45"
                                       FontSize="13"
                                       TextColor="#8F8F8F" />
                                <Label Text="¥300"
                                       FontSize="16"
                                       FontAttributes="Bold"
                                       TextColor="#E53935" />
                            </VerticalStackLayout>
                        </Grid>
                    </Border>
                </VerticalStackLayout>
            </ScrollView>
        </Grid>
    </Grid>
</ContentPage>
】

Views/ZonePage.xaml.cs:
【using GamerLinkApp.ViewModels;

namespace GamerLinkApp.Views;

public partial class ZonePage : ContentPage
{
	public ZonePage()
	{
		InitializeComponent();
	}
	// 修改构造函数以接收 ViewModel
	public ZonePage(ZoneViewModel vm)
	{
		InitializeComponent();
		BindingContext = vm; // 设置数据上下文
	}
}】

